import cv2
import numpy as np
points_with_confidence = np.array(
    [248.94, 81.6767, 0.935687, 262.687, 118.87, 0.906967, 242.13, 120.828, 0.820844, 207.858, 141.354, 0.815456,
     166.77, 149.211, 0.860964, 284.162, 116.913, 0.775896, 318.412, 135.519, 0.828298, 350.708, 151.135, 0.871648,
     266.591, 203.95, 0.656241, 255.806, 203.006, 0.626415, 264.625, 266.586, 0.782925, 293.975, 319.394, 0.833589,
     277.339, 203.955, 0.642223, 266.581, 269.504, 0.806337, 256.783, 328.197, 0.785736, 246.992, 75.8567, 0.889436,
     254.819, 75.8395, 0.954964, 0, 0, 0, 270.477, 78.7767, 0.903617, 256.768, 346.795, 0.73078, 261.699, 343.878,
     0.736936, 255.81, 332.087, 0.689596, 275.393, 326.268, 0.702509, 276.333, 324.268, 0.648877, 300.788, 325.271,
     0.73803])

COLORS = [
    [255, 0, 85],
    [255, 0, 0],
    [255, 85, 0],
    [255, 170, 0],
    [255, 255, 0],
    [170, 255, 0],
    [85, 255, 0],
    [0, 255, 0],
    [255, 0, 0],
    [0, 255, 85],
    [0, 255, 170],
    [0, 255, 255],
    [0, 170, 255],
    [0, 85, 255],
    [0, 0, 255],
    [255, 0, 170],
    [170, 0, 255],
    [255, 0, 255],
    [85, 0, 255],
    [0, 0, 255],
    [0, 0, 255],
    [0, 0, 255],
    [0, 255, 255],
    [0, 255, 255]]

PAIRS_RENDER = np.array(
    [[1, 8], [1, 2], [1, 5], [2, 3], [3, 4], [5, 6], [6, 7], [8, 9], [9, 10], [10, 11], [8, 12], [12, 13], [13, 14],
     [1, 0], [0, 15], [15, 17], [0, 16], [16, 18], [14, 19], [19, 20], [14, 21], [11, 22], [22, 23], [11, 24]])

mask = np.ones(points_with_confidence.size, dtype=bool)
mask[2::3] = 0
points = points_with_confidence[mask]

img = np.zeros((512, 512, 3), np.uint8)
thicknessCircleRatio = 1 / .75;
thicknessLineRatioWRTCircle = 0.75;

for pair, color in zip(PAIRS_RENDER, COLORS):
    x1 = int(points[2 * pair[0]])
    y1 = int(points[2 * pair[0] + 1])
    x2 = int(points[2 * pair[1]])
    y2 = int(points[2 * pair[1] + 1])
    print(COLORS[8], pair[1])
    if (x1 != 0 and x2 != 0 and y1 != 0 and y2 != 0):
        cv2.line(img, (x1, y1), (x2, y2), color, thickness=4)
        cv2.circle(img, (x1, y1), 5, color, -1)
cv2.imshow('image', img)
cv2.waitKey(0)
cv2.destroyAllWindows()
